
import { Message } from "../types";

export const exportUtils = {
  /**
   * Export chat history to JSON format and trigger download
   */
  exportToJson: (messages: Message[], filename: string = "pulsebot-chat-history") => {
    // Prepare data for export
    const exportData = {
      exportDate: new Date().toISOString(),
      chatHistory: messages.map(msg => ({
        role: msg.role,
        content: msg.content,
        timestamp: msg.timestamp || new Date().toISOString(),
        language: msg.language || 'en'
      }))
    };
    
    // Convert to JSON string
    const jsonString = JSON.stringify(exportData, null, 2);
    const blob = new Blob([jsonString], { type: "application/json" });
    const url = URL.createObjectURL(blob);
    
    // Create download link
    const link = document.createElement("a");
    link.href = url;
    link.download = `${filename}.json`;
    document.body.appendChild(link);
    link.click();
    
    // Clean up
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  },
  
  /**
   * Export chat history to PDF format using browser's print functionality
   */
  exportToPdf: (messages: Message[], title: string = "PulseBot Chat History") => {
    // Create a new window for printing
    const printWindow = window.open('', '_blank');
    if (!printWindow) {
      alert('Please allow popups to export as PDF');
      return;
    }
    
    // Generate HTML content for the PDF
    const content = `
      <!DOCTYPE html>
      <html>
      <head>
        <title>${title}</title>
        <style>
          body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 20px;
            color: #333;
          }
          .header {
            text-align: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #ddd;
          }
          .chat-container {
            max-width: 800px;
            margin: 0 auto;
          }
          .message {
            margin-bottom: 15px;
            padding: 10px 15px;
            border-radius: 10px;
          }
          .user {
            background-color: #f0f0f0;
            margin-left: 50px;
          }
          .assistant {
            background-color: #e6f7ff;
            margin-right: 50px;
          }
          .timestamp {
            font-size: 12px;
            color: #999;
            margin-top: 5px;
          }
          .role {
            font-weight: bold;
            margin-bottom: 5px;
          }
          .export-info {
            font-size: 12px;
            color: #999;
            text-align: center;
            margin-top: 30px;
          }
          @media print {
            body { 
              -webkit-print-color-adjust: exact;
              print-color-adjust: exact;
            }
          }
        </style>
      </head>
      <body>
        <div class="chat-container">
          <div class="header">
            <h1>${title}</h1>
            <p>Exported on ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}</p>
          </div>
          
          ${messages.map(msg => `
            <div class="message ${msg.role}">
              <div class="role">${msg.role === 'user' ? 'You' : 'PulseBot'}</div>
              <div class="content">${msg.content.replace(/\n/g, '<br>')}</div>
              <div class="timestamp">${msg.timestamp ? new Date(msg.timestamp).toLocaleString() : new Date().toLocaleString()}</div>
            </div>
          `).join('')}
          
          <div class="export-info">
            <p>Generated by PulsePlace.ai | Powered by PulseBot</p>
          </div>
        </div>
        <script>
          // Automatically trigger print when loaded
          window.onload = function() {
            setTimeout(() => {
              window.print();
              setTimeout(() => window.close(), 500);
            }, 500);
          };
        </script>
      </body>
      </html>
    `;
    
    // Write the content to the new window
    printWindow.document.open();
    printWindow.document.write(content);
    printWindow.document.close();
  }
};
